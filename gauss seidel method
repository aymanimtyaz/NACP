import java.io.*;
class gaussSeidelMethod
{
    public static void main(String ars[])throws IOException
    {
        DataInputStream in=new DataInputStream(System.in);
        System.out.println("ENTER THE COEFFICIENT MATRIX");
        float coeft[][]=new float[3][3];
        for(int i=0; i<3; i++)
        for(int j=0; j<3; j++)
        coeft[i][j]=Float.parseFloat(in.readLine());
        System.out.println("ENTER THE SOLUTION MATRIX");
        float soln[][]=new float[3][1];
        for(int i=0; i<3; i++)
        soln[i][0]=Float.parseFloat(in.readLine());
        float matC[][]=new float[3][1];
        for(int i=0; i<3; i++)
        matC[i][0]=(soln[i][0]/coeft[i][i]);
        float matB[][]=new float[3][3];
        for(int i=0; i<3; i++)
        for(int j=0; j<3; j++)
        {
            if(i==j)
            matB[i][j]=0;
            else
            matB[i][j]=-1*(coeft[i][j]/coeft[i][i]);
        }
        System.out.println("ENTER THE INITIAL APPROXIMATIONS");
        float x=Float.parseFloat(in.readLine());
        float y=Float.parseFloat(in.readLine());
        float z=Float.parseFloat(in.readLine());
        System.out.println("ENTER NUMBER OF ITERATIONS");
        int n=Integer.parseInt(in.readLine());
        for(int i=1; i<=n; i++)
        {
            x=matC[0][0]+matB[0][1]*y+matB[0][2]*z;
            y=matC[1][0]+matB[1][0]*x+matB[1][2]*z;
            z=matC[2][0]+matB[2][0]*x+matB[2][1]*y;
        }
        System.out.println("x="+x+" y="+y+" z="+z);
    }
}
